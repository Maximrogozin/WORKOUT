{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport isOutdated from \"../utils/isOutdated\";\nimport categoryService from \"../services/category.service\";\nconst categorySlice = createSlice({\n  name: \"category\",\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null,\n    lastFetch: null\n  },\n  reducers: {\n    categoryRequested: state => {\n      state.isLoading = true;\n    },\n    categoryReceved: (state, action) => {\n      state.entities = action.payload;\n      state.lastFetch = Date.now();\n      state.isLoading = false;\n    },\n    categoryRequestFailed: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    }\n  }\n});\nconst {\n  reducer: categoryReducer,\n  actions\n} = categorySlice;\nconst {\n  categoryRequested,\n  categoryReceved,\n  categoryRequestFailed\n} = actions;\nexport const loadCategoryList = () => async (dispatch, getState) => {\n  const {\n    lastFetch\n  } = getState().category;\n  if (isOutdated(lastFetch)) {\n    console.log(\"lastFetch\", lastFetch);\n    dispatch(categoryRequested());\n    try {\n      const {\n        content\n      } = await categoryService.get();\n      dispatch(categoryReceved(content));\n    } catch (error) {\n      dispatch(categoryRequestFailed(error.message));\n    }\n  }\n};\nexport const getCategory = () => state => state.category.entities;\nexport const getCategoryLoadingStatus = () => state => state.category.isLoading;\nexport default categoryReducer;","map":{"version":3,"names":["createSlice","isOutdated","categoryService","categorySlice","name","initialState","entities","isLoading","error","lastFetch","reducers","categoryRequested","state","categoryReceved","action","payload","Date","now","categoryRequestFailed","reducer","categoryReducer","actions","loadCategoryList","dispatch","getState","category","console","log","content","get","message","getCategory","getCategoryLoadingStatus"],"sources":["/Users/maksimrogozin/Documents/VScode/workout_diplom/WORKOUT/client/src/app/store/category.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport isOutdated from \"../utils/isOutdated\";\nimport categoryService from \"../services/category.service\";\n\nconst categorySlice = createSlice({\n  name: \"category\",\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null,\n    lastFetch: null,\n  },\n  reducers: {\n    categoryRequested: (state) => {\n      state.isLoading = true;\n    },\n    categoryReceved: (state, action) => {\n      state.entities = action.payload;\n      state.lastFetch = Date.now();\n      state.isLoading = false;\n    },\n    categoryRequestFailed: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n  },\n});\n\nconst { reducer: categoryReducer, actions } = categorySlice;\nconst { categoryRequested, categoryReceved, categoryRequestFailed } = actions;\n\nexport const loadCategoryList = () => async (dispatch, getState) => {\n  const { lastFetch } = getState().category;\n  if (isOutdated(lastFetch)) {\n    console.log(\"lastFetch\", lastFetch);\n    dispatch(categoryRequested());\n    try {\n      const { content } = await categoryService.get();\n      dispatch(categoryReceved(content));\n    } catch (error) {\n      dispatch(categoryRequestFailed(error.message));\n    }\n  }\n};\n\nexport const getCategory = () => (state) => state.category.entities;\nexport const getCategoryLoadingStatus = () => (state) =>\n  state.category.isLoading;\n\nexport default categoryReducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,eAAe,MAAM,8BAA8B;AAE1D,MAAMC,aAAa,GAAGH,WAAW,CAAC;EAChCI,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,IAAI;IACfC,KAAK,EAAE,IAAI;IACXC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiB,EAAGC,KAAK,IAAK;MAC5BA,KAAK,CAACL,SAAS,GAAG,IAAI;IACxB,CAAC;IACDM,eAAe,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClCF,KAAK,CAACN,QAAQ,GAAGQ,MAAM,CAACC,OAAO;MAC/BH,KAAK,CAACH,SAAS,GAAGO,IAAI,CAACC,GAAG,CAAC,CAAC;MAC5BL,KAAK,CAACL,SAAS,GAAG,KAAK;IACzB,CAAC;IACDW,qBAAqB,EAAEA,CAACN,KAAK,EAAEE,MAAM,KAAK;MACxCF,KAAK,CAACJ,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACL,SAAS,GAAG,KAAK;IACzB;EACF;AACF,CAAC,CAAC;AAEF,MAAM;EAAEY,OAAO,EAAEC,eAAe;EAAEC;AAAQ,CAAC,GAAGlB,aAAa;AAC3D,MAAM;EAAEQ,iBAAiB;EAAEE,eAAe;EAAEK;AAAsB,CAAC,GAAGG,OAAO;AAE7E,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAClE,MAAM;IAAEf;EAAU,CAAC,GAAGe,QAAQ,CAAC,CAAC,CAACC,QAAQ;EACzC,IAAIxB,UAAU,CAACQ,SAAS,CAAC,EAAE;IACzBiB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAElB,SAAS,CAAC;IACnCc,QAAQ,CAACZ,iBAAiB,CAAC,CAAC,CAAC;IAC7B,IAAI;MACF,MAAM;QAAEiB;MAAQ,CAAC,GAAG,MAAM1B,eAAe,CAAC2B,GAAG,CAAC,CAAC;MAC/CN,QAAQ,CAACV,eAAe,CAACe,OAAO,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACde,QAAQ,CAACL,qBAAqB,CAACV,KAAK,CAACsB,OAAO,CAAC,CAAC;IAChD;EACF;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAOnB,KAAK,IAAKA,KAAK,CAACa,QAAQ,CAACnB,QAAQ;AACnE,OAAO,MAAM0B,wBAAwB,GAAGA,CAAA,KAAOpB,KAAK,IAClDA,KAAK,CAACa,QAAQ,CAAClB,SAAS;AAE1B,eAAea,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}